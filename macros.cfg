###################################################################
# Script Name	 : "macros.cfg"                                                                                         
# Description	 : Adds print macros such as start print and end print.
#                  in cura, as start gcode you can define "START_PRINT" and end gcode "END_PRINT"
#
# Author       	 : Alexander Koehler                                              
# Email          : software@akks.de 
# Date           : 22.01.2022
###################################################################



######################################################################
# Things printer should do on connection (variables, etc)
[delayed_gcode ON_CONNECT]
initial_duration: 0.5                       # Wait until printer reports READY
gcode:
    M117 AK3D started
    RESPOND MSG="AK3D started by ON_CONNECT"
    # load save_vars and set as new default (for Dual Extruders!!!) 
    LOAD_DUAL_DEFAULT

######################################################################
# Start Print and End Print
######################################################################
# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

######################################################################
# START_PRINT BED_TEMP, EXTRUDER_TEMP, Z_OFFSET
[gcode_macro START_PRINT]
description: Default Print Start params: BED_TEMP, EXTRUDER_TEMP, Z_OFFSET - Replace the slicer's custom start and end g-code scripts with START_PRINT
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set Z_OFFSET = params.Z_OFFSET|default(0)|float %}
    {% set BED_TEMP_PRE = params.BED_TEMP_PRE|default(60)|float %}
    M117 Start printing
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z={Z_OFFSET|float}
    # Vorheizen
    #M190 S{BED_TEMP_PRE}    # Wait for Heat Bed temperature wait for bed to reach 60
    M140 S{BED_TEMP} 
    M109 S{EXTRUDER_TEMP} ; Set Hotend Temperature and wait
    #M104 S{EXTRUDER_TEMP}   # Set Hotend Temperature
    # Weiter heizen
    #M140 S{BED_TEMP}        # Set Bed Temperature without wait
    # Achsen Home
    G28         # Home the printer
    BED_MESH_PROFILE LOAD=default   # Use the bed mesh 
    G1 X20 Y20 Z30 F6000    # Move the nozzle near the bed
    G92 E0                  # Reset Extruder
    # Extruder Vorbereiten
    # {% if printer["gcode_macro EXTRUDER_VARS"].num_extruders > 1 %}
    #     PREP_EXTRUDERS  # Vorbereitung fuer Dual/Mehr Extruder
    # {% endif %}
    # Temperatur for Heat bed and extruder.
    #M140 S{BED_TEMP}
    #M109 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}   # Wait for Hotend Temperature
    M190 S{BED_TEMP}        # Wait for Head Bed temperature!
    # Duese reinigen
    CLEAN_NOZZLE    # Clean Nozzle
    PRIME_LINE      # Prime line

######################################################################
# END_PRINT
[gcode_macro END_PRINT]
description: Default Print Ende - Replace the slicer's custom start and end g-code scripts with END_PRINT
gcode:
    M117 Done printing :)
    # move z up
    G91 #;Relative positioning
    G1 E-3 Z+10 F3000   #;Retract a bit
    # absolute xy 
    #G90 #;Absolute positioning
    #G1 X10 Y220 F2000
    PARKING_BED
    #disable hotend, heated bed and fan
    M104 S0
    M140 S0
    M106 S0
    # disable steppers
    M84                     #or  M84 X Y E ;Disable all steppers but Z
    BED_MESH_CLEAR


######################################################################
# clean the nozzle 
[gcode_macro CLEAN_NOZZLE]
description: Clean Nozzle - Clean the nozzle
gcode: 
    SAVE_GCODE_STATE NAME=clean_nozzle
    M117 Clean Nozzle
    G90
    G1 X230 Y10 F4000 # move 1. Pos
    G1 X253 F4000 # move 2. Pos
    G1 X220 F2000 # move 1. Pos
    G1 X253 F2000 # move 2. Pos
    G1 X220 F3000 # move 1. Pos
    G1 X253 F3000 # move 2. Pos
    G1 X220 F5000 # move 1. Pos    
    RESTORE_GCODE_STATE NAME=clean_nozzle

######################################################################
# prime the nozzle 
[gcode_macro PRIME_LINE]
description: Prime Line - prime the nozzle
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X5 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X5 Y20 Z0.3 F1500.0 ; Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X10 Y30 Z0.3 ;move down to Bed
    #G1 X40 Y40 Z20 F5000.0 ; Move over to prevent blob squish

######################################################################
# M117 to View the M117 Status in fluidd Console
[gcode_macro M117]
rename_existing: M117.1
gcode:
  M117.1 { rawparams }
  M118 { rawparams }

######################################################################
# G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
description: G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=default
[gcode_macro bed_mesh_home_all]
description: G29 alias that does (1) home all (2) get bed mesh (3) move nozzle to corner
gcode:
    G29

######################################################################
# M115
[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set out = ['mcu build version:'] %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% if name2 is in ['mcu_version'] %}
        {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}
  M115.1

######################################################################
# Parking Toolhead and Bed
[gcode_macro M125]
description: Parking toolhead - move to park position
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z30 F600 # move up 20 mm
    G90
    G1 X10 Y10 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking
[gcode_macro parking_toolhead]
description: M125 alias Parking toolhead - move to park position
gcode:
    M125

[gcode_macro PARKING_BED]
description: Parking Bed - move to park position
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking Bed
    G91
    G1 Z30 F600 # move up 5 mm
    G90
    G1 X230 Y230 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking

######################################################################
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@220)
[gcode_macro LOW_TEMP_CHECK]
description: LOW_TEMP_CHECK checks if there is a setpoint for the extruder -If this setpoint is reached, continue. -If not, heat to setpoint. -If no setpoint, heat to parameter T (default@220)
gcode: 
    {% set T = params.T|default(220)|float %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}

######################################################################
# Variables to store temperatures in case of timeout and they need to be restored prior to resuming print
[gcode_macro STORE_TEMP]
description: Variables to store temperatures in case of timeout and they need to be restored prior to resuming print
variable_nozzle_temp: 0
variable_bed_temp: 0
gcode:
    SET_GCODE_VARIABLE MACRO=STORE_TEMP VARIABLE=nozzle_temp VALUE={printer.extruder.target}
    SET_GCODE_VARIABLE MACRO=STORE_TEMP VARIABLE=bed_temp VALUE={printer.heater_bed.target}

######################################################################
# load filament
[gcode_macro M701]
description: Filament Loading
gcode:
    SAVE_GCODE_STATE NAME=filament_loading
    M117 Filament Loading
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E520 F3000 #G1 E420 F3000  # length of bowden tube till cold-end (~420mm) 
    G1 E100 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=filament_loading
[gcode_macro filament_loading]
description: M701 alias Filament Loading
gcode:
    M701

######################################################################
# unload filament
[gcode_macro M702]
description: Filament Unloading 
gcode:
    SAVE_GCODE_STATE NAME=filament_unloading
    M125 # park
    M117 Filament Unloading 
    LOW_TEMP_CHECK
    G91 # set relative
    #G1 E10 F100 
    # wiggle filament out of the nozzle
    G1 E0.5 F1000
    G1 E-0.5 F1000
    G1 E1.0 F1000
    G1 E-1.0 F1000
    G1 E1.5 F1000
    G1 E-1.5 F1000
    G1 E2.0 F1000
    G92 E0.0
    G1 E-630 F3000 # the E is the length of the bowden tube (420mm) + 100 mm. 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=filament_unloading
[gcode_macro filament_unloading]
description: M702 alias Filament Unloading
gcode:
    M702

######################################################################
# filament change 
[gcode_macro M600]
description: Filament Change
gcode:
    M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    M702 # unload

    M117 New filament
    M118 New filament
    COUNTDOWN TIME=25 MSG="Switch"
    M701 # load
    COUNTDOWN TIME=10 MSG="Clean"
    RESUME
    M117 Resuming
    M118 Resuming
    RESTORE_GCODE_STATE NAME=filament_change
    M117 Printing..
    M118 Printing..

[gcode_macro FILAMENT_CHANGE]
description: M600 alias Filament Change
gcode:
    M600

######################################################################
# clear stale M117 messages
# UPDATE_DELAYED_GCODE ID=CLEAR_MSG DURATION=10
[delayed_gcode CLEAR_MSG]
initial_duration: 0.2
gcode:
    M117
######################################################################
[gcode_macro COUNTDOWN]
description: COUNTDOWN - Params: MSG, Time
#default_parameter_MSG: "Time: "
#default_parameter_TIME: 10
gcode: 
    {% set MSG = params.MSG|default("Time: ")|string %}
    {% set TIME = params.TIME|default(10)|int %}
    # countdown 
    {% for s in range(TIME|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {MSG} {s}s
        M118 {MSG} {s}s
    {% endfor %}


######################################################################
# Beeper
######################################################################
# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.
[gcode_macro M300]
description: Beeper -Usage: M300 [P<ms>] [S<Hz>] - P is the tone duration, S the tone frequency.
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

######################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

######################################################################
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

######################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 230    #edit to your park position
# default_parameter_Y: 230    #edit to your park position
# default_parameter_Z: 10     #edit to your park position
# default_parameter_E: 1      #edit to your retract length
# gcode:
    # SAVE_GCODE_STATE NAME=PAUSE_state
    # BASE_PAUSE
    # G91
    # G1 E-{E} F2100
    # G1 Z{Z}
    # G90
    # G1 X{X} Y{Y} F6000

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# default_parameter_E: 1      #edit to your retract length
# gcode:
    # G91
    # G1 E{E} F2100
    # G90
    # RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    # BASE_RESUME

# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
    # TURN_OFF_HEATERS
    # CLEAR_PAUSE
    # SDCARD_RESET_FILE
    # BASE_CANCEL_PRINT

######################################################################
# SEARCH_VARS - search var tree from runtime Variable. With empty search view all!
# source: https://klipper.discourse.group/t/example-search-printer-objects/164
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 
        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 
        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}
                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 
                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
            {% endfor %}
        {% endif %} 
    {% endfor %}


######################################################################
######################################################################
######################################################################
